<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pets.mapper.IpRecordMapper">

    <insert id="ipInsert" parameterType="com.pets.pojo.entity.IpLocation">
        INSERT INTO login_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null and account != ''">
                account,
            </if>
            <if test="accountType != null and accountType >= 0">
                account_type,
            </if>
            <if test="country != null and country != ''">
                country,
            </if>
            <if test="region != null and region != ''">
                region,
            </if>
            <if test="city != null and city != ''">
                city,
            </if>
            <if test="lat != null">
                lat,
            </if>
            <if test="lon != null">
                lon,
            </if>
            <if test="isp != null and isp != ''">
                isp,
            </if>
            <if test="ip != null and ip != ''">
                ip,
            </if>
            <if test="message != null and message != ''">
                message,
            </if>
            <if test="result != null and result >= 0">
                result,
            </if>
            <if test="login_type != null and login_type >= 0">
                login_type,
            </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="account != null and account != ''">
                #{account},
            </if>
            <if test="accountType != null and accountType >= 0">
                #{accountType},
            </if>
            <if test="country != null and country != ''">
                #{country},
            </if>
            <if test="region != null and region != ''">
                #{region},
            </if>
            <if test="city != null and city != ''">
                #{city},
            </if>
            <if test="lat != null">
                #{lat},
            </if>
            <if test="lon != null">
                #{lon},
            </if>
            <if test="isp != null and isp != ''">
                #{isp},
            </if>
            <if test="ip != null and ip != ''">
                #{ip},
            </if>
            <if test="message != null and message != ''">
                #{message},
            </if>
            <if test="result != null and result >= 0">
                #{result},
            </if>
            <if test="login_type != null and login_type >= 0">
                #{login_type},
            </if>
        </trim>
    </insert>

    <select id="queryAllIpInfo" resultType="com.pets.pojo.entity.IpLocation">
        select id, ip, account, account_type as accountType, country, region, city, lat, lon, isp, message, result, login_type, createdDate
        from login_record
        <where>
            <if test="username != null and username != ''">
                account = #{username}
            </if>
            <if test="ip != null and ip != ''">
                and ip like concat('%',#{ip},'%')
            </if>
            <if test="accountType != null and accountType >= 0">
                and account_type = #{accountType}
            </if>
            <if test="result != null and result >= 0">
                and result = #{result}
            </if>
            <if test="loginType != null and loginType >= 0">
                and login_type = #{loginType}
            </if>
            <if test="begin != null and begin != '' and end != null and end != ''">
                and createdDate between #{begin} and #{end}
            </if>
        </where>
        order by createdDate desc
    </select>

    <select id="homeLoginCount" resultType="com.pets.pojo.vo.HomeLoginVO">
        SELECT
        CASE
        WHEN t.account_type = 0 THEN '客户登录'
        WHEN t.account_type = 1 THEN '员工登录'
        ELSE '未知'
        END AS loginCategory,
        COALESCE(COUNT(lr.id), 0) AS total,
        COALESCE(SUM(CASE WHEN lr.result = 0 THEN 1 ELSE 0 END), 0) AS success,
        COALESCE(SUM(CASE WHEN lr.result = 1 THEN 1 ELSE 0 END), 0) AS failed
        FROM (SELECT 0 AS account_type UNION ALL SELECT 1) t
        LEFT JOIN login_record lr
        ON t.account_type = lr.account_type
        <if test="startOfToday != null and endOfToday != null">
            AND lr.createdDate BETWEEN #{startOfToday} AND #{endOfToday}
        </if>
        GROUP BY t.account_type;
    </select>



</mapper>
